#include <iostream>
#include <stack>
#include <string>
#include <unordered_map>//哈希表存储运算符优先值
using namespace std;

stack<int> num;
stack<char> op;
unordered_map<char,int> h{{'+',1},{'-',1},{'*',2},{'/',2}};

void eval(){
    int a=num.top();//第二个操作数
    num.pop();
    
    int b=num.top();//第一个操作数
    num.pop();
    
    char p=op.top();
    op.pop();
    
    int r=0;//r用来存储运算结果
    if(p=='+')r=b+a;
    if(p=='-')r=b-a;
    if(p=='*')r=b*a;
    if(p=='/')r=b/a;
    num.push(r);
}


int main(){
    string s;
    cin>>s;
    for(int i=0;i<(int)s.size();i++){
        if(isdigit(s[i])){
            int x=0,j=i;
            while(j<(int)s.size()&&isdigit(s[j])){
                x=x*10+s[j]-'0';
                j++;
            }
            num.push(x);
            i=j-1;
        }
        else if(s[i]=='('){
            op.push(s[i]);//左括号直接弹入符号栈，等待右括号回收
        }else if(s[i]==')'){
            while(op.top()!='('){
                eval();
            }op.pop();//弹出左括号；
        }else{
            while(op.size()&&h[op.top()]>=h[s[i]]){
                eval();
            }op.push(s[i]);//如果待入栈运算符优先级高，先将待入栈运算符入栈
        }
    }
    while(op.size())eval();
    cout<<num.top()<<endl;
    return 0;
    
}
